name: Run a recheck

on:
  workflow_call:
    inputs:
      which:
        description: Should be 'strong' or 'most'.
        type: string
        default: strong
        required: false

env:
  R_LIBS_USER: ${{github.workspace}}/pkglib

jobs:
  prepare:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    container: ghcr.io/r-devel/recheck
    outputs:
      oldfile: ${{ steps.filenames.outputs.oldfile }}
      newfile: ${{ steps.filenames.outputs.newfile }}
    steps:
      - name: prepare
        run: |
          mkdir -p $R_LIBS_USER
          R -e ".libPaths()"

      - name: clone
        run: git clone --depth=1 https://github.com/${{github.repository}} source

      - name: download dependencies
        run: rechecktools::install_recheck_deps('source', '${{inputs.which}}')
        shell: Rscript {0}

      - name: build source package
        run: |
          mkdir newpkg
          R CMD build source
          mv *.tar.gz newpkg/
          rm -Rf source

      - name: Get old version of package
        shell: Rscript {0}
        run: |
          dir.create("oldpkg")
          pkg <- sub("_.*", "", list.files("newpkg"))
          download.packages(pkg, "oldpkg", repos = "https://cran.r-project.org")

      - name: Get file names
        id: filenames
        run: |
          echo "oldfile=$(cd oldpkg; echo *.tar.gz)" >> "$GITHUB_OUTPUT"
          echo "newfile=$(cd newpkg; echo *.tar.gz)" >> "$GITHUB_OUTPUT"

      - name: Save package and library
        uses: actions/cache/save@v4
        with:
          path: |
            pkglib
            newpkg
            oldpkg
          key: ${{ runner.os }}-${{ github.run_id }}-${{github.run_attempt}}

  checks:
    needs: prepare
    runs-on: ubuntu-latest
    name: Recheck ${{matrix.check == 'oldpkg' && needs.prepare.outputs.oldfile || needs.prepare.outputs.newfile}} (${{matrix.check}})
    container: ghcr.io/r-devel/recheck
    timeout-minutes: 600
    strategy:
      matrix:
        check: [ 'oldpkg', 'newpkg' ]
    env:
      _R_CHECK_FORCE_SUGGESTS_: false
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_ELAPSED_TIMEOUT_: 3600
      GITHUB_ACTIONS: ''
      CI: ''
    steps:

      - name: Download package and library
        uses: actions/cache/restore@v4
        with:
          path: |
            pkglib
            newpkg
            oldpkg
          key: ${{ runner.os }}-${{ github.run_id }}-${{github.run_attempt}}

      - name: Start Xvfb
        run: |
          nohup Xvfb :6 -screen 0 1280x1024x24 > ~/X.log 2>&1 &
          export DISPLAY=:6

      - name: Run checks
        shell: Rscript {0}
        run: |
          checkdir <- "${{matrix.check}}"
          options(repos = c(CRAN = 'https://cloud.r-project.org'))
          reverse <- list(repos = 'https://cloud.r-project.org', which = "${{ inputs.which }}")
          tools::check_packages_in_dir(checkdir, check_args = "--as-cran", reverse = reverse, Ncpus = parallel::detectCores())
          details <- tools::check_packages_in_dir_details(checkdir)
          write.csv(details, file.path(checkdir, 'check-details.csv'))
          writeLines(paste(format(details), collapse = "\n\n"), file.path(checkdir, 'check-details.txt'))
          tools::summarize_check_packages_in_dir_results(checkdir)

      - uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.check}}-checklogs
          path: |
            ${{matrix.check}}/*/*.log
            ${{matrix.check}}/*/*.out
            ${{matrix.check}}/*/*.Rout
            ${{matrix.check}}/*/*.fail
            ${{matrix.check}}/check-details.*

  results:
    name: Show results
    needs: checks
    runs-on: ubuntu-latest
    container: ghcr.io/r-hub/r-minimal/r-minimal:latest
    steps:
      - name: Download log files
        uses: actions/download-artifact@v4

      - name: Show results
        shell: Rscript {0}
        run: |
          changes <- tools::check_packages_in_dir_changes("newpkg-checklogs", "oldpkg-checklogs")
          if(nrow(changes)){
            cat("Changes:\n")
            print(changes)
          } else {
            cat("No changes between old and new version\n")
          }
          cat("\n------- Check results summary ------\n")
          tools::summarize_check_packages_in_dir_results("newpkg-checklogs")

